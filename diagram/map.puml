@startuml

interface Topic {
  id
}

hide Topic

class ThoughtProxy {
  id
}

Topic <|-- ThoughtProxy

note left: ThoughtProxy is an equivalence class of Symbols,\n induced by equivalence SymbolRelations.\n structure is derived from its \nunique (optional) formalization\nbut carried by the ThoughtProxy,\nbecause the formalization is a Symbol

ThoughtProxy "1..*" o--* "*" Symbol
(ThoughtProxy , Symbol) . Interpretation
class Interpretation {}
note top: Many interpretations of a Decontextualized Symbol;\nA subset will apply to the Symbol in a specific Context,\nwhich restrains the interpretations.\nCould be restricted to a community or domain

class DecontextualizedSymbol {
  String text
}

DecontextualizedSymbol <|-- Formalization

class Formalization {
  Formalization canonicalize()
}

ThoughtProxy "1" *-- "0..1" Formalization

ThoughtProxy <|-- Claim

DecontextualizedSymbol "*" --> "*" DecontextualizedSymbol
(DecontextualizedSymbol , DecontextualizedSymbol) . SymbolRelation
DecontextualizedSymbol <|-- DeclarativeSentence

SymbolRelation o--> "1" SymbolRelationType

enum SymbolRelationType {
  equivalent
  not_equivalent
  precision
}

SymbolInContext "*" o--* "1" DecontextualizedSymbol
SymbolInContext "*" --* "1" Document

interface Symbol
Symbol <|-- DecontextualizedSymbol
Symbol <|-- SymbolInContext

class SymbolInContext {
  xpointer position
  DecontextualizedSymbol detach()
}

class Document {
}
note bottom: Context for the Symbol.\nUsually text, could be media.
' Digital objects, Agents and literals are also Topics


Claim <|-- Argument

ThoughtProxy "*" <-- Claim : entities
Argument o--> "*" Claim : premises
Argument o--> "1" Claim : conclusion

Claim <|-- LogicalVariant
Claim "1" <--o LogicalVariant

DeclarativeSentence .. Claim

class LogicalVariant {
  truthvalue
  Claim baseClaim
}

class ArgumentFamily {
  Claim baseConclusion()
  Claim[] basePremises()
}

Argument "1..*" <--o ArgumentFamily
ThoughtProxy <|-- ArgumentFamily

@enduml
