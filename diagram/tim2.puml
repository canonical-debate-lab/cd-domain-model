@startuml

class Claim {
  String sentence
  ' String negation_sentence  (must be != sentence)
}

Claim "*" <-> "*" Claim : > equivalent_to
note  "implicitly reflexive, symmetric, transitive?" as N2
(Claim, Claim) . N2

'(Claim, Claim) . ClaimEquivalence
'ClaimEquivalenceClass o-> "*" Claim

'ClaimEquivalence "*" -> "*" ClaimEquivalence : > negation

Claim "*" -> "*" Claim : > negation
note  "anti-reflexive, symmetric, anti-transitive?" as N1
(Claim, Claim) .. N1

'Claim o-> Claim : > supports

class ClaimSupport {
  Claim supported
  Claim supporting
}
note bottom: "A negation B, B equivalent_to C => A negation C"

Claim "1" <- ClaimSupport: < supported 
Claim "1" <- ClaimSupport: < supporting

class SupportSupport {
  ClaimSupport supported
  Claim supporting
}

ClaimSupport "1" <- SupportSupport: < supported 
Claim "1" <- SupportSupport: < supporting



Claim o-> Claim : > opposes
' (Claim, Claim) .. N4




@enduml

